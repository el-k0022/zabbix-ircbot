{
   "agent.hostname": "Agent host name. Returns string",
   "agent.ping": "Agent availability check. Returns nothing - unavailable; 1 - available",
   "agent.version": "Version of Zabbix agent. Returns string",
   "db.odbc.discovery[<unique short description>,<dsn>]": "Transform SQL query result into a JSON object for low-level discovery.",
   "db.odbc.select[<unique short description>,<dsn>]": "Return first column of the first row of the SQL query result.",
   "eventlog[name,<regexp>,<severity>,<source>,<eventid>,<maxlines>,<mode>]": "Event log monitoring. Returns log",
   "grpfunc[<group>,<key>,<func>,<param>]": "Aggregate checks do not require any agent running on a host being monitored. Zabbix server collects aggregate information by doing direct database queries. See Zabbix Manual.",
   "icmpping[<target>,<packets>,<interval>,<size>,<timeout>]": "Checks if server is accessible by ICMP ping. 0 - ICMP ping fails. 1 - ICMP ping successful. One of zabbix_server processes performs ICMP pings once per PingerFrequency seconds.",
   "icmppingloss[<target>,<packets>,<interval>,<size>,<timeout>]": "Returns percentage of lost ICMP ping packets.",
   "icmppingsec[<target>,<packets>,<interval>,<size>,<timeout>,<mode>]": "Returns ICMP ping response time in seconds. Example: 0.02",
   "kernel.maxfiles": "Maximum number of opened files supported by OS. Returns integer",
   "kernel.maxproc": "Maximum number of processes supported by OS. Returns integer",
   "log[file,<regexp>,<encoding>,<maxlines>,<mode>,<output>]": "Log file monitoring. Returns log",
   "logrt[file_regexp,<regexp>,<encoding>,<maxlines>,<mode>,<output>]": "Log file monitoring with log rotation support. Returns log",
   "net.dns.record[<ip>,zone,<type>,<timeout>,<count>,<protocol>]": "Performs a DNS query. Returns character string with the required type of information",
   "net.dns[<ip>,zone,<type>,<timeout>,<count>,<protocol>]": "Checks if DNS service is up. Returns 0 - DNS is down (server did not respond or DNS resolution failed); 1 - DNS is up",
   "net.if.collisions[if]": "Number of out-of-window collisions. Returns integer",
   "net.if.in[if,<mode>]": "Incoming traffic statistics on network interface. Returns integer",
   "net.if.list": "Network interface list (includes interface type, status, IPv4 address, description). Returns text",
   "net.if.out[if,<mode>]": "Outgoing traffic statistics on network interface. Returns integer",
   "net.if.total[if,<mode>]": "Sum of incoming and outgoing traffic statistics on network interface. Returns integer",
   "net.tcp.listen[port]": "Checks if this TCP port is in LISTEN state. Returns 0 - it is not in LISTEN state; 1 - it is in LISTEN state",
   "net.tcp.port[<ip>,port]": "Checks if it is possible to make TCP connection to specified port. Returns 0 - cannot connect; 1 - can connect",
   "net.tcp.service.perf[service,<ip>,<port>]": "Check performance of service. 0 - service is down, sec - number of seconds spent on connection to the service. If <ip> is missing, IP or DNS name is taken from host definition. If <port> is missing, default service port is used.",
   "net.tcp.service[service,<ip>,<port>]": "Check if service is available. 0 - service is down, 1 - service is running. If <ip> is missing, IP or DNS name is taken from host definition. If <port> is missing, default service port is used.",
   "net.udp.listen[port]": "Checks if this UDP port is in LISTEN state. Returns 0 - it is not in LISTEN state; 1 - it is in LISTEN state",
   "net.udp.service.perf[service,<ip>,<port>]": "Checks performance of service. Returns 0 - service is down; seconds - the number of seconds spent waiting for response from the service",
   "net.udp.service[service,<ip>,<port>]": "Checks if service is running and responding to UDP requests. Returns 0 - service is down; 1 - service is running",
   "perf_counter[counter,<interval>]": "Value of any Windows performance counter. Returns integer, float, string or text (depending on the request)",
   "proc.mem[<name>,<user>,<mode>,<cmdline>,<memtype>]": "Memory used by process in bytes. Returns integer",
   "proc.num[<name>,<user>,<state>,<cmdline>]": "The number of processes. Returns integer",
   "proc_info[<process>,<attribute>,<type>]": "Different information about specific process(es). Returns float",
   "sensor[device,sensor,<mode>]": "Hardware sensor reading. Returns float",
   "service_state[service]": "State of a service. Returns 0 - running; 1 - paused; 2 - start pending; 3 - pause pending; 4 - continue pending; 5 - stop pending; 6 - stopped; 7 - unknown; 255 - no such service",
   "services[<type>,<state>,<exclude>]": "Listing of services. Returns 0 - if empty; text - list of services separated by a newline",
   "snmptrap.fallback": "Catches all SNMP traps that are not caught by any of the snmptrap[] items from a corresponding address of the interface.",
   "snmptrap[<regex>]": "Catches all SNMP traps from a corresponding address that match regex. Default regex is an empty string.",
   "system.boottime": "System boot time. Returns integer (Unix timestamp)",
   "system.cpu.intr": "Device interrupts. Returns integer",
   "system.cpu.load[<cpu>,<mode>]": "CPU load. Returns float",
   "system.cpu.num[<type>]": "Number of CPUs. Returns integer",
   "system.cpu.switches": "Count of context switches. Returns integer",
   "system.cpu.util[<cpu>,<type>,<mode>]": "CPU utilisation in percent. Returns float",
   "system.hostname[<type>]": "System host name. Returns string",
   "system.hw.chassis[<info>]": "Chassis information. Returns string",
   "system.hw.cpu[<cpu>,<info>]": "CPU information. Returns string or integer",
   "system.hw.devices[<type>]": "Listing of PCI or USB devices. Returns text",
   "system.hw.macaddr[<interface>,<format>]": "Listing of MAC addresses. Returns string",
   "system.localtime[<type>]": "System time. Returns integer with type as utc; string - with type as local",
   "system.run[command,<mode>]": "Run specified command on the host. Returns text result of the command",
   "system.stat[resource,<type>]": "System statistics. Returns integer or float",
   "system.sw.arch": "Software architecture information. Returns string",
   "system.sw.os[<info>]": "Operating system information. Returns string",
   "system.sw.packages[<package>,<manager>,<format>]": "Listing of installed packages. Returns text",
   "system.swap.in[<device>,<type>]": "Swap in (from device into memory) statistics. Returns integer",
   "system.swap.out[<device>,<type>]": "Swap out (from memory onto device) statistics. Returns integer",
   "system.swap.size[<device>,<type>]": "Swap space size in bytes or in percentage from total. Returns integer for bytes; float for percentage",
   "system.uname": "Detailed host information. Returns string",
   "system.uptime": "System uptime in seconds. Returns integer",
   "system.users.num": "Number of users logged in. Returns integer",
   "vfs.dev.read[<device>,<type>,<mode>]": "Disk read statistics. Returns integer with type in sectors, operations, bytes; float with type in sps, ops, bps",
   "vfs.dev.write[<device>,<type>,<mode>]": "Disk write statistics. Returns integer with type in sectors, operations, bytes; float with type in sps, ops, bps",
   "vfs.file.cksum[file]": "File checksum, calculated by the UNIX cksum algorithm. Returns integer",
   "vfs.file.contents[file,<encoding>]": "Retrieving contents of a file. Returns text",
   "vfs.file.exists[file]": "Checks if file exists. Returns 0 - not found; 1 - regular file or a link (symbolic or hard) to regular file exists",
   "vfs.file.md5sum[file]": "MD5 checksum of file. Returns character string (MD5 hash of the file)",
   "vfs.file.regexp[file,regexp,<encoding>,<start line>,<end line>,<output>]": "Find string in a file. Returns the line containing the matched string, or as specified by the optional output parameter",
   "vfs.file.regmatch[file,regexp,<encoding>,<start line>,<end line>]": "Find string in a file. Returns 0 - match not found; 1 - found",
   "vfs.file.size[file]": "File size (in bytes). Returns integer",
   "vfs.file.time[file,<mode>]": "File time information. Returns integer (Unix timestamp)",
   "vfs.fs.inode[fs,<mode>]": "Number or percentage of inodes. Returns integer for number; float for percentage",
   "vfs.fs.size[fs,<mode>]": "Disk space in bytes or in percentage from total. Returns integer for bytes; float for percentage",
   "vm.memory.size[<mode>]": "Memory size in bytes or in percentage from total. Returns integer for bytes; float for percentage",
   "vmware.cluster.status[<url>,<name>]": "VMware cluster status, <url> - VMware service URL, <name> - VMware cluster name",
   "vmware.eventlog[<url>]": "VMware event log, <url> - VMware service URL",
   "vmware.fullname[<url>]": "VMware service full name, <url> - VMware service URL",
   "vmware.hv.cluster.name[<url>,<uuid>]": "VMware hypervisor cluster name, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.cpu.usage[<url>,<uuid>]": "VMware hypervisor processor usage in Hz, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.datastore.read[<url>,<uuid>,<datastore>,<mode>]": "VMware hypervisor datastore read statistics, <url> - VMware service URL, <uuid> - VMware hypervisor host name, <datastore> - datastore name, <mode> - latency",
   "vmware.hv.datastore.write[<url>,<uuid>,<datastore>,<mode>]": "VMware hypervisor datastore write statistics, <url> - VMware service URL, <uuid> - VMware hypervisor host name, <datastore> - datastore name, <mode> - latency",
   "vmware.hv.full.name[<url>,<uuid>]": "VMware hypervisor name, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.hw.cpu.freq[<url>,<uuid>]": "VMware hypervisor processor frequency, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.hw.cpu.model[<url>,<uuid>]": "VMware hypervisor processor model, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.hw.cpu.num[<url>,<uuid>]": "Number of processor cores on VMware hypervisor, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.hw.cpu.threads[<url>,<uuid>]": "Number of processor threads on VMware hypervisor, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.hw.memory[<url>,<uuid>]": "VMware hypervisor total memory size, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.hw.model[<url>,<uuid>]": "VMware hypervisor model, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.hw.uuid[<url>,<uuid>]": "VMware hypervisor BIOS uuid, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.hw.vendor[<url>,<uuid>]": "VMware hypervisor vendor name, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.memory.size.ballooned[<url>,<uuid>]": "VMware hypervisor ballooned memory size, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.memory.used[<url>,<uuid>]": "VMware hypervisor used memory size, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.network.in[<url>,<uuid>,<mode>]": "VMware hypervisor network input statistics, <url> - VMware service URL, <uuid> - VMware hypervisor host name, <mode> - bps",
   "vmware.hv.network.out[<url>,<uuid>,<mode>]": "VMware hypervisor network output statistics, <url> - VMware service URL, <uuid> - VMware hypervisor host name, <mode> - bps",
   "vmware.hv.perfcounter[<url>,<uuid>,<path>,<instance>]": "VMware hypervisor performance counter, <url> - VMware service URL, <uuid> - VMware hypervisor host name, <path> - performance counter path, <instance> - performance counter instance",
   "vmware.hv.status[<url>,<uuid>]": "VMware hypervisor status, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.uptime[<url>,<uuid>]": "VMware hypervisor uptime, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.version[<url>,<uuid>]": "VMware hypervisor version, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.hv.vm.num[<url>,<uuid>]": "Number of virtual machines on VMware hypervisor, <url> - VMware service URL, <uuid> - VMware hypervisor host name",
   "vmware.version[<url>]": "VMware service version, <url> - VMware service URL",
   "vmware.vm.cluster.name[<url>,<uuid>]": "VMware virtual machine name, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.cpu.num[<url>,<uuid>]": "Number of processors on VMware virtual machine, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.cpu.ready[<url>,<uuid>]": "VMware virtual machine processor ready time %, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.cpu.usage[<url>,<uuid>]": "VMware virtual machine processor usage in Hz, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.hv.name[<url>,<uuid>]": "VMware virtual machine hypervisor name, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.memory.size.ballooned[<url>,<uuid>]": "VMware virtual machine ballooned memory size, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.memory.size.compressed[<url>,<uuid>]": "VMware virtual machine compressed memory size, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.memory.size.private[<url>,<uuid>]": "VMware virtual machine private memory size, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.memory.size.shared[<url>,<uuid>]": "VMware virtual machine shared memory size, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.memory.size.swapped[<url>,<uuid>]": "VMware virtual machine swapped memory size, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.memory.size.usage.guest[<url>,<uuid>]": "VMware virtual machine guest memory usage, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.memory.size.usage.host[<url>,<uuid>]": "VMware virtual machine host memory usage, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.memory.size[<url>,<uuid>]": "VMware virtual machine total memory size, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.net.if.in[<url>,<uuid>,<instance>,<mode>]": "VMware virtual machine network interface input statistics, <url> - VMware service URL, <uuid> - VMware virtual machine host name, <instance> - network interface instance, <mode> - bps/pps - bytes/packets per second",
   "vmware.vm.net.if.out[<url>,<uuid>,<instance>,<mode>]": "VMware virtual machine network interface output statistics, <url> - VMware service URL, <uuid> - VMware virtual machine host name, <instance> - network interface instance, <mode> - bps/pps - bytes/packets per second",
   "vmware.vm.perfcounter[<url>,<uuid>,<path>,<instance>]": "VMware virtual machine performance counter, <url> - VMware service URL, <uuid> - VMware virtual machine host name, <path> - performance counter path, <instance> - performance counter instance",
   "vmware.vm.powerstate[<url>,<uuid>]": "VMware virtual machine power state, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.storage.committed[<url>,<uuid>]": "VMware virtual machine committed storage space, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.storage.uncommitted[<url>,<uuid>]": "VMware virtual machine uncommitted storage space, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.storage.unshared[<url>,<uuid>]": "VMware virtual machine unshared storage space, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.uptime[<url>,<uuid>]": "VMware virtual machine uptime, <url> - VMware service URL, <uuid> - VMware virtual machine host name",
   "vmware.vm.vfs.dev.read[<url>,<uuid>,<instance>,<mode>]": "VMware virtual machine disk device read statistics, <url> - VMware service URL, <uuid> - VMware virtual machine host name, <instance> - disk device instance, <mode> - bps/ops - bytes/operations per second",
   "vmware.vm.vfs.dev.write[<url>,<uuid>,<instance>,<mode>]": "VMware virtual machine disk device write statistics, <url> - VMware service URL, <uuid> - VMware virtual machine host name, <instance> - disk device instance, <mode> - bps/ops - bytes/operations per second",
   "vmware.vm.vfs.fs.size[<url>,<uuid>,<fsname>,<mode>]": "VMware virtual machine file system statistics, <url> - VMware service URL, <uuid> - VMware virtual machine host name, <fsname> - file system name, <mode> - total/free/used/pfree/pused",
   "web.page.get[host,<path>,<port>]": "Get content of web page. Returns web page source as text",
   "web.page.perf[host,<path>,<port>]": "Loading time of full web page (in seconds). Returns float",
   "web.page.regexp[host,<path>,<port>,<regexp>,<length>,<output>]": "Find string on a web page. Returns the matched string, or as specified by the optional output parameter",
   "wmi.get[<namespace>,<query>]": "Execute WMI query and return the first selected object. Returns integer, float, string or text (depending on the request)",
   "zabbix[boottime]": "Startup time of Zabbix server, Unix timestamp.",
   "zabbix[history]": "Number of values stored in table HISTORY.",
   "zabbix[history_log]": "Number of values stored in table HISTORY_LOG.",
   "zabbix[history_str]": "Number of values stored in table HISTORY_STR.",
   "zabbix[history_text]": "Number of values stored in table HISTORY_TEXT.",
   "zabbix[history_uint]": "Number of values stored in table HISTORY_UINT.",
   "zabbix[host,,maintenance]": "Returns current maintenance status of the host.",
   "zabbix[host,<type>,available]": "Returns availability of a particular type of checks on the host. Value of this item corresponds to availability icons in the host list. Valid types are: agent, snmp, ipmi, jmx.",
   "zabbix[hosts]": "Number of monitored hosts",
   "zabbix[items]": "Number of items in Zabbix database.",
   "zabbix[items_unsupported]": "Number of unsupported items in Zabbix database.",
   "zabbix[java,,<param>]": "Returns information associated with Zabbix Java gateway. Valid params are: ping, version.",
   "zabbix[process,<type>,<num>,<state>]": "Time a particular Zabbix process or a group of processes (identified by <type> and <num>) spent in <state> in percentage.",
   "zabbix[proxy,<name>,<param>]": "Time of proxy last access. Name - proxy name. Param - lastaccess. Unix timestamp.",
   "zabbix[proxy_history]": "Number of items in proxy history that are not yet sent to the server",
   "zabbix[queue,<from>,<to>]": "Number of items in the queue which are delayed by from to to seconds, inclusive.",
   "zabbix[rcache,<cache>,<mode>]": "Configuration cache statistics. Cache - buffer (modes: pfree, total, used, free).",
   "zabbix[requiredperformance]": "Required performance of the Zabbix server, in new values per second expected.",
   "zabbix[trends]": "Number of values stored in table TRENDS.",
   "zabbix[trends_uint]": "Number of values stored in table TRENDS_UINT.",
   "zabbix[triggers]": "Number of triggers in Zabbix database.",
   "zabbix[uptime]": "Uptime of Zabbix server process in seconds.",
   "zabbix[vcache,buffer,<mode>]": "Value cache statistics. Valid modes are: total, free, pfree, used and pused.",
   "zabbix[vcache,cache,<parameter>]": "Value cache effectiveness. Valid parameters are: requests, hits and misses.",
   "zabbix[vmware,buffer,<mode>]": "VMware cache statistics. Valid modes are: total, free, pfree, used and pused.",
   "zabbix[wcache,<cache>,<mode>]": "Data cache statistics. Cache - one of values (modes: all, float, uint, str, log, text), history (modes: pfree, total, used, free), trend (modes: pfree, total, used, free), text (modes: pfree, total, used, free)."
}
